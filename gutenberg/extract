#!/usr/bin/python3

# This file is part of Project Babel.
# Copyright 2021 Graham Shaw
# Redistribution and modification are permitted within the terms of the
# BSD-3-Clause licence as defined by v3.4 of the SPDX Licence List.

import argparse
import re
import json
import bs4

parser = argparse.ArgumentParser(
    description = 'Extract paragraphs from raw texts.')
parser.add_argument('-l', '--lang', action='append',
    help='BCP 47 language tag to accept')
parser.add_argument('files', default='files.json',
    help='JSON file containing list of texts to be processed')
args = parser.parse_args()

def extract(para):
    children = para.contents
    if len(children) != 1:
        return None
    child = children[0]
    if not isinstance(child, bs4.element.NavigableString):
        return None
    text = str(child)
    text = re.sub('[\t\n\r ]+', ' ', text)
    return text.strip()

files = []
with open(args.files, 'r') as f:
    for line in f:
        files.append(json.loads(line))

for file in files:
    paragraphs = []
    with open(file['pathname'], 'rb') as f:
        soup = bs4.BeautifulSoup(f, 'html.parser')
        html = soup.html
        if not html:
            continue
        lang = None
        lang = html.get('lang', lang)
        if args.lang:
            if lang not in args.lang:
                continue
        for para in soup.find_all('p'):
            content = extract(para)
            if content:
                paragraphs.append(content)

    if paragraphs:
        file = dict(file)
        file['paragraphs'] = paragraphs
        print(json.dumps(file))
